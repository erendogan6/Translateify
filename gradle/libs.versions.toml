[versions]
# AndroidX
appcompat = "1.7.0"
activity = "1.9.2"
constraintlayout = "2.1.4"
core = "4.6.2"
coreKtx = "1.13.1"
lifecycle = "2.8.6"
fragmentKtx = "1.8.3"
swiperefreshlayout = "1.1.0"
navigation = "2.8.1"


# Firebase
firebaseBom = "33.3.0"
firebaseAnalytics = "22.1.0"
firebaseAuth = "23.0.0"
firebaseCrashlytics = "19.1.0"
firebaseFirestore = "25.1.0"
firebaseConfigKtx = "22.0.0"
firebaseCrashlyticsPlugin = "3.0.2"
googleServices = "4.4.2"

# Google Libraries
material = "1.12.0"
glide = "4.16.0"
lottie = "6.5.2"
timber = "5.0.1"

# Retrofit & OkHttp
retrofit = "2.11.0"
converterGson = "2.11.0"
okhttp = "4.12.0"
loggingInterceptor = "4.12.0"

# Hilt & Dagger
hilt = "2.52"

# Testing Libraries
junit = "4.13.2"
junitVersion = "1.2.1"
espresso = "3.6.1"
coreTesting = "2.2.0"
mockk = "1.13.12"
kotlinxCoroutinesAndroid = "1.9.0"
kotlinxCoroutinesTest = "1.9.0"
mockkAndroid = "1.13.12"
assertjAndroid = "1.2.0"

# Other Libraries
leakcanary = "2.14"
chucker = "4.0.0"
gson = "2.11.0"

# Android Gradle Plugin and Kotlin
agp = "8.6.1"
kotlin = "2.0.0"

# Miscellaneous
roomRuntime = "2.6.1"
roomCompiler = "2.6.1"
roomKtx = "2.6.1"
navigationRuntimeKtx = "2.8.1"
coreKtxVersion = "1.6.1"
runner = "1.6.2"
generativeai = "0.9.0"
kover = "0.9.0-RC"
ksp = "2.0.0-1.0.24"

[plugins]
# Android Plugins
android-application = { id = "com.android.application", version.ref = "agp" }

# Kotlin Plugins
jetbrains-kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }

# Hilt & Dagger Plugins
hilt-android = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }

# Google & Firebase Plugins
google-services = { id = "com.google.gms.google-services", version.ref = "googleServices" }
firebase-crashlytics-gradle = { id = "com.google.firebase.crashlytics", version.ref = "firebaseCrashlyticsPlugin" }

ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }

[libraries]
# AndroidX Libraries
androidx-activity = { group = "androidx.activity", name = "activity", version.ref = "activity" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "constraintlayout" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-fragment-ktx = { module = "androidx.fragment:fragment-ktx", version.ref = "fragmentKtx" }
androidx-lifecycle-livedata-ktx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycle" }
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycle" }
androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
androidx-navigation-fragment-ktx = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "navigation" }
androidx-navigation-runtime-ktx = { group = "androidx.navigation", name = "navigation-runtime-ktx", version.ref = "navigationRuntimeKtx" }
androidx-navigation-safe-args-gradle-plugin = { module = "androidx.navigation:navigation-safe-args-gradle-plugin", version.ref = "navigation" }
androidx-navigation-ui-ktx = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "navigation" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "roomCompiler" }
androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "roomKtx" }
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "roomRuntime" }
androidx-swiperefreshlayout = { group = "androidx.swiperefreshlayout", name = "swiperefreshlayout", version.ref = "swiperefreshlayout" }
jetbrains-kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutinesTest" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinxCoroutinesAndroid" }

# Firebase Libraries
firebase-analytics = { module = "com.google.firebase:firebase-analytics", version.ref = "firebaseAnalytics" }
firebase-auth = { module = "com.google.firebase:firebase-auth", version.ref = "firebaseAuth" }
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBom" }
firebase-config-ktx = { group = "com.google.firebase", name = "firebase-config-ktx", version.ref = "firebaseConfigKtx" }
firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics", version.ref = "firebaseCrashlytics" }
firebase-firestore = { module = "com.google.firebase:firebase-firestore", version.ref = "firebaseFirestore" }

# Google Libraries
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
compiler = { module = "com.github.bumptech.glide:compiler", version.ref = "glide" }
lottie = { module = "com.airbnb.android:lottie", version.ref = "lottie" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }

# Retrofit & OkHttp
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "converterGson" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
loggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "loggingInterceptor" }

# Hilt & Dagger Libraries
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-android-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }
hilt-android-testing = { module = "com.google.dagger:hilt-android-testing", version.ref = "hilt" }

# Testing Libraries
junit = { group = "junit", name = "junit", version.ref = "junit" }
espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espresso" }
androidx-core-testing = { module = "androidx.arch.core:core-testing", version.ref = "coreTesting" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
mockk-android = { module = "io.mockk:mockk-android", version.ref = "mockkAndroid" }
androidx-junit-ktx = { group = "androidx.test.ext", name = "junit-ktx", version.ref ="junitVersion" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion"}
core-ktx = { group = "androidx.test", name = "core-ktx", version.ref = "coreKtxVersion" }
androidx-runner = { group = "androidx.test", name = "runner", version.ref = "runner" }

# Miscellaneous Libraries
assertj-android = { module = "com.squareup.assertj:assertj-android", version.ref = "assertjAndroid" }
chucker = { module = "com.github.chuckerteam.chucker:library", version.ref = "chucker" }
chucker-no-op = { module = "com.github.chuckerteam.chucker:library-no-op", version.ref = "chucker" }
markwon = { module = "io.noties.markwon:core", version.ref = "core" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
leakcanary-android = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakcanary" }

# AI and Other Services
generativeai = { group = "com.google.ai.client.generativeai", name = "generativeai", version.ref = "generativeai" }
